cmake_minimum_required(VERSION 3.23)

set(PROJ_NAME RAY)
project(${PROJ_NAME} VERSION 1.0 LANGUAGES C CXX)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(OPENGL_SRC_DIR ${CMAKE_CURRENT_LIST_DIR}/src/opengl)
aux_source_directory(${CMAKE_CURRENT_LIST_DIR}/src SRC_FILES)
aux_source_directory(${CMAKE_CURRENT_LIST_DIR}/src/sdl SDL_FILES)
aux_source_directory(${OPENGL_SRC_DIR} OPENGL_FILES)
add_executable(${PROJ_NAME} ${SRC_FILES} ${SDL_FILES} ${OPENGL_FILES})

include(FetchContent)

FetchContent_Declare(
    sdl2
    GIT_REPOSITORY https://github.com/libsdl-org/SDL
    GIT_TAG c98c4fbff6d8f3016a3ce6685bf8f43433c3efcc
)
FetchContent_Declare(
    glm
    GIT_REPOSITORY https://github.com/g-truc/glm.git
    GIT_TAG 0af55ccecd98d4e5a8d1fad7de25ba429d60e863
)

FetchContent_MakeAvailable(sdl2)
FetchContent_MakeAvailable(glm)

find_package(OpenGL REQUIRED)

find_package(glew CONFIG REQUIRED)

target_compile_features(${PROJ_NAME} PRIVATE cxx_std_23)
target_link_libraries(${PROJ_NAME} PRIVATE SDL2::SDL2 glm::glm ${OPENGL_gl_LIBRARY} GLEW::GLEW)
target_include_directories(${PROJ_NAME} PRIVATE ${CMAKE_CURRENT_LIST_DIR}/headers ${OPENGL_INCLUDE_DIR})
# target_link_libraries(${PROJ_NAME} PRIVATE "-framework Cocoa")
# target_link_libraries(${PROJ_NAME} PRIVATE "-framework OpenGL")
# target_link_libraries(${PROJ_NAME} PRIVATE "-framework IOKit")

file(GLOB_RECURSE GL_SHADER_FILES RELATIVE "${OPENGL_SRC_DIR}" "${OPENGL_SRC_DIR}/shaders/*")
foreach(file IN LISTS GL_SHADER_FILES) 
  configure_file("${OPENGL_SRC_DIR}/${file}" "${CMAKE_BINARY_DIR}/${file}" COPYONLY)
endforeach()

file(GLOB_RECURSE TEXTURE_FILES RELATIVE "${CMAKE_CURRENT_LIST_DIR}" "resources/textures/*")
foreach(file IN LISTS TEXTURE_FILES) 
  configure_file("${file}" "${CMAKE_BINARY_DIR}/${file}" COPYONLY)
endforeach()

include(FetchContent)
FetchContent_Declare(
    googletest
    GIT_REPOSITORY https://github.com/google/googletest.git
    GIT_TAG b514bdc898e2951020cbdca1304b75f5950d1f59
    GIT_SHALLOW TRUE
)
FetchContent_MakeAvailable(googletest)

enable_testing()

add_executable(
  ReactivePrimitivesTests
  tests/ReactivePrimitivesTests.cpp
)
target_link_libraries(
  ReactivePrimitivesTests
  GTest::gtest_main
)
target_compile_features(ReactivePrimitivesTests PRIVATE cxx_std_23)
target_include_directories(ReactivePrimitivesTests PRIVATE ${CMAKE_CURRENT_LIST_DIR}/headers)
include(GoogleTest)
gtest_discover_tests(ReactivePrimitivesTests)